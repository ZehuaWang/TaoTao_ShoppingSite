package com.taotao.sso.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.alibaba.druid.util.StringUtils;
import com.taotao.common.pojo.TaotaoResult;
import com.taotao.mapper.TbUserMapper;
import com.taotao.pojo.TbUserExample;
import com.taotao.pojo.TbContentCategoryExample.Criteria;
import com.taotao.pojo.TbUser;
import com.taotao.sso.service.RegisterService;

/**
 * 注册服务
 * 
 * @author Homeuser
 *
 */
@Service
public class RegisterServiceImpl implements RegisterService {

	@Autowired
	private TbUserMapper userMapper;

	@Override
	public TaotaoResult checkData(String param, int type) {

		// 根据数据类型 检查数据
		TbUserExample example = new TbUserExample();
		com.taotao.pojo.TbUserExample.Criteria criteria = example.createCriteria();

		// 1 2 3 分别代表 username phone email
		if (1 == type) {
			criteria.andUsernameEqualTo(param);
		} else if (2 == type) {
			criteria.andPhoneEqualTo(param);
		} else if (3 == type) {
			criteria.andEmailEqualTo(param);
		}

		// 执行查询
		List<TbUser> list = userMapper.selectByExample(example);

		// 判断查询结果是否为空
		if (list == null || list.isEmpty()) {
			return TaotaoResult.ok(true);
		} else {
			return TaotaoResult.ok(false);
		}
	}

	/**
	 * 用户注册
	 */
	@Override
	public TaotaoResult register(TbUser user) {
		// 校验数据
		// 用户名 密码 不能为空值
		if (StringUtils.isEmpty(user.getUsername()) || StringUtils.isEmpty(user.getPassword())) {
			return TaotaoResult.build(400, "用户名或密码不能为空");
		}

		// 校验数据是否重复
		// 校验用户名字
		TaotaoResult result = checkData(user.getUsername(), 1);
		if(!(boolean) result.getData())
		{
			return TaotaoResult.build(400, "用户名重复");
		}
		
		return null;
	}
}