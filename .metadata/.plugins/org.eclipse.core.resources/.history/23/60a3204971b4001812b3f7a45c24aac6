package com.taotao.portal.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

import com.taotao.common.pojo.TaotaoResult;
import com.taotao.common.utils.CookieUtils;
import com.taotao.common.utils.JsonUtils;
import com.taotao.pojo.TbItem;
import com.taotao.portal.pojo.CartItem;
import com.taotao.portal.service.CartService;
import com.taotao.portal.service.ItemService;

/**
 * 购物车实现
 * 
 * @author Homeuser
 *
 */
@Service
public class CartServiceImpl implements CartService {

	@Autowired
	private ItemService itemService;

	@Value("${COOKIE_EXPIRE}")
	private Integer COOKIE_EXPIRE;

	@Override
	public TaotaoResult addCart(Long itemId, Integer num, HttpServletRequest request, HttpServletResponse response) {

		// 从cookie中取出购物车商品列表
		List<CartItem> itemList = getCartItemList(request);

		// 从商品列表中查询列表是否存在此商品
		boolean haveFlg = false;

		for (CartItem cartItem : itemList) {

			// 如果商品存在 加上对应的数量
			if (cartItem.getId().longValue() == itemId) {
				cartItem.setNum(cartItem.getNum() + num);
				haveFlg = true;
				break;
			}
		}

		// 如果不存在 调用rest服务 根据商品id获得商品数据
		if (!haveFlg) {

			TbItem item = itemService.getItemById(itemId);

			// 转换成CartItem
			CartItem cartItem = new CartItem();
			cartItem.setId(itemId);
			cartItem.setNum(num);
			cartItem.setPrice(item.getPrice());
			cartItem.setTitle(item.getTitle());
			if (!StringUtils.isEmpty(item.getImage())) {
				String image = item.getImage();
				String[] strings = image.split(",");
				cartItem.setImage(strings[0]);
			}
			// 添加到购物车商品列表
			itemList.add(cartItem);
		}

		// 购物车商品写入cookie
		CookieUtils.setCookie(request, response, "TT_CART", JsonUtils.objectToJson(itemList), COOKIE_EXPIRE, true);

		return TaotaoResult.ok();
	}

	/**
	 * 取出购物车商品列表
	 * 
	 * @param request
	 * @return
	 */
	private List<CartItem> getCartItemList(HttpServletRequest request) {

		try {
			// 从cookie中取商品列表

			String json = CookieUtils.getCookieValue(request, "TT_CART", true);

			// 把json转换成java对象
			List<CartItem> list = JsonUtils.jsonToList(json, CartItem.class);

			return list == null ? new ArrayList<CartItem>() : list;
		}

		catch (Exception e) {

			return new ArrayList<CartItem>();
		}
	}

	@Override
	public TaotaoResult updateCartItem(long itemId, Integer num, HttpServletRequest request,
			HttpServletResponse response) {

		// 从cookie中取出购物车商品列表
		List<CartItem> itemList = getCartItemList(request);

		//根据商品id查询商品
		for(CartItem cartItem:itemList) {
			if(cartItem.getId() == itemId) {
				//更新数量
				cartItem.setNum(num);
				break;
			}
		}
		//写入cookie
		CookieUtils.setCookie(request, response, "TT_CART", JsonUtils.objectToJson(itemList), COOKIE_EXPIRE, true);
		
		return TaotaoResult.ok();
	}

	@Override
	public List<CartItem> getCartItems(HttpServletRequest request) {
		
		List<CartItem> list = getCartItemList(request);
		
		return list;
	}

	@Override
	public TaotaoResult deleteCartItem(long itemId, HttpServletRequest request, HttpServletResponse response) {
		
		List<CartItem> itemList = getCartItemList(request);
		
		for(CartItem cartItem : itemList)
		{
			if(cartItem.getId() == itemId) {
			
				itemList.remove(cartItem);
				
			}
			
			
			
		}
		
		
		return null;
	}
}